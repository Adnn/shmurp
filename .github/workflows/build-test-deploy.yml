name: build-test-deploy
on: [push]
env:
  # Control Conan behaviour
  # Apparently glfw/3.3.4 is not compatible with Conan v2
  #CONAN_V2_MODE: 1
  CONAN_SCM_TO_CONANDATA: 1
  CONAN_SYSREQUIRES_MODE: enabled
  # Custom variables used by the workflow
  CONAN_DEV_USER_CHANNEL: adnn/develop
#on:
#  push:
#    branches:
#      - develop
jobs:
  build_test_deploy:
    name: Build, test, deploy
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - cppstd: 17
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Prepare recipe info
        id: recipe
        run: |
          # That is not the accurate recipe name, this is just by convention.
          # see: https://github.com/conan-io/conan/issues/9264
          recipe_name=${GITHUB_REPOSITORY#*/}
          echo "::set-output name=name::${recipe_name}"
          echo "::set-output name=reference::${recipe_name}/$(echo ${GITHUB_SHA} | cut -c1-10)"
        shell: bash
      - name: Get Conan
        uses: turtlebrowser/get-conan@v1.0
      - name: Configure Conan
        run: conan remote add adnn ${{ secrets.CONAN_REMOTE_URL }}
      # No build_tests option on shmurp
      - run: >
          conan create
          --build=missing
          -s compiler.cppstd=${{ matrix.cppstd }}
          conan/ ${{ steps.recipe.outputs.reference }}@
      - name: Deploy recipe (develop)
        if: ${{ success() && contains('refs/heads/develop', github.ref) }}
        run: |
          conan user -p ${{ secrets.CONAN_USER_PASSWORD }} -r adnn ${{ secrets.CONAN_USER_NAME }}
          conan copy --all ${{ steps.recipe.outputs.reference }} ${CONAN_DEV_USER_CHANNEL}
          conan upload -r adnn --confirm ${{ steps.recipe.outputs.reference }}@${CONAN_DEV_USER_CHANNEL}
        shell: bash
